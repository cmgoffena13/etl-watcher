services:
  redis:
    image: redis:8-alpine
    container_name: watcher-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - watcher_redis_data:/data

  postgres:
    image: postgres:18
    container_name: watcher-postgres
    environment:
      POSTGRES_DB: watcher
      POSTGRES_USER: watcher
      POSTGRES_PASSWORD: watcher
    ports:
      - "5432:5432"
    volumes:
      - watcher_postgres_data:/var/lib/postgresql

  api:
    build: .
    container_name: watcher-api
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - ENV_STATE=dev
      - DEV_DATABASE_URL=postgresql+asyncpg://watcher:watcher@postgres:5432/watcher
    depends_on:
      - redis
      - postgres
    volumes:
      - ./src:/watcher/src
      - ./dev_start.sh:/watcher/start.sh
    command: ["/bin/bash", "/watcher/start.sh"]

  beat:
    build: .
    container_name: watcher-beat
    user: celery
    env_file:
      - .env
    environment:
      - ENV_STATE=dev
      - DEV_DATABASE_URL=postgresql+asyncpg://watcher:watcher@postgres:5432/watcher
    depends_on:
      - redis
    command: ["uv", "run", "--", "celery", "-A", "src.celery_app", "beat", "--loglevel=info"]

  worker:
    build: .
    container_name: watcher-worker
    user: celery
    env_file:
      - .env
    environment:
      - ENV_STATE=dev
      - DEV_DATABASE_URL=postgresql+asyncpg://watcher:watcher@postgres:5432/watcher
    depends_on:
      - redis
      - postgres
    command: ["uv", "run", "--", "celery", "-A", "src.celery_app", "worker", "--loglevel=info", "--queues=celery,scheduled"]

volumes:
  watcher_redis_data:
  watcher_postgres_data: