"""

Revision ID: 20250904184009
Revises:
Create Date: 2025-09-04 18:40:11.466560

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel  # ADDED
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "20250904184009"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pipeline_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
        sa.Column("timely_number", sa.Integer(), nullable=True),
        sa.Column(
            "timely_datepart",
            sa.Enum(
                "MINUTE", "HOUR", "DAY", "WEEK", "MONTH", "YEAR", name="datepartenum"
            ),
            nullable=True,
        ),
        sa.Column("mute_timely_check", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_pipeline_type_name"), "pipeline_type", ["name"], unique=True
    )
    op.create_table(
        "pipeline",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
        sa.Column("pipeline_type_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["pipeline_type_id"],
            ["pipeline_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pipeline_name"), "pipeline", ["name"], unique=True)
    op.create_table(
        "pipeline_execution",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("pipeline_id", sa.Integer(), nullable=False),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_successfully", sa.Boolean(), nullable=False),
        sa.Column("inserts", sa.Integer(), nullable=True),
        sa.Column("updates", sa.Integer(), nullable=True),
        sa.Column("soft_deletes", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pipeline_id"],
            ["pipeline.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("pipeline_execution")
    op.drop_index(op.f("ix_pipeline_name"), table_name="pipeline")
    op.drop_table("pipeline")
    op.drop_index(op.f("ix_pipeline_type_name"), table_name="pipeline_type")
    op.drop_table("pipeline_type")
    # ### end Alembic commands ###
